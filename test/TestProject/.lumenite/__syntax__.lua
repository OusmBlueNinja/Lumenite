
---@meta

--[[----------------------------------------------------------------------------
  This file provides IntelliSense and type annotations for the Lumenite web framework.

  DO NOT EDIT THIS FILE MANUALLY.
  It is automatically generated and used by Lua language servers (such as EmmyLua / LuaLS)
  to enable autocompletion, documentation, and static type checking in Lumenite-based apps.

  Any manual changes will be overwritten during regeneration or update.
------------------------------------------------------------------------------]]

---@alias Headers table<string, string>
---@alias RouteHandler fun(req: Request, ...: string): string|Response|table



---@class SendFileOptions
---@field as_attachment? boolean
---@field download_name? string
---@field content_type? string
---@field status? integer
---@field headers? Headers

---@class Request
---@field method string
---@field path string
---@field headers Headers
---@field query table<string, string|string[]>
---@field form table<string, string|string[]>
---@field body string
---@field remote_ip string

---@class Response
---@field status integer
---@field headers Headers
---@field body string

---@class App
local app = {}

---@param path string
---@param handler RouteHandler
function app:get(path, handler) end

---@param path string
---@param handler RouteHandler
function app:post(path, handler) end

---@param path string
---@param handler RouteHandler
function app:put(path, handler) end

---@param path string
---@param handler RouteHandler
function app:delete(path, handler) end

---@param key string
---@return string
function app.session_get(key) end

---@param key string
---@param value string
function app.session_set(key, value) end

---@param name string
---@param fn fun(input: string): string
function app:template_filter(name, fn) end

---@param filename string
---@param context table
---@return string
function app.render_template(filename, context) end

---@param template_string string
---@param context table
---@return string
function app.render_template_string(template_string, context) end

---@param path string
---@param options? SendFileOptions
---@return Response
function app.send_file(path, options) end

---@param table table
---@return Response
function app.jsonify(table) end

---@param json string
---@return table
function app.json(json) end

---@param json string
---@return table
function app.from_json(json) end

---@param fn fun(req: Request): Response|nil
function app.before_request(fn) end

---@param fn fun(req: Request, res: Response): Response|nil
function app.after_request(fn) end

---@param url string
---@return table
function app.http_get(url) end

---@overload fun(status: integer)
---@param status integer
---@param message? string
function app.abort(status, message) end

---@param port integer
function app:listen(port) end

---@type App
_G.app = app

return app
    